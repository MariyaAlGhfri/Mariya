

x=lambda x,y:x+y
print(x(2,10))
########################################
#sorted age use lambda

pepole=[{'name':'john','age':28},
        {'name':'mary','age':23},
        {'name':'bob','age':35},
        {'name':'alice','age':32}]

x=sorted(pepole, key=lambda i: i['age'])
print(x)


########################################
#filter num 
num=[-4,-6,5,1,-3,4]

newlist1=list(filter(lambda x:x>=0, num))
newlist2=list(filter(lambda x:x<0, num))
print(newlist1)
print(newlist2)


###############################################################
#filter upper and lower use lambda
lis=["john","ALICE","Mary"]
newlist=list(filter(lambda x:x.islower() ,lis))
newlist1=list(filter(lambda x:x.isupper() ,lis))
newlist2=list(filter(lambda x:x.isupper() or x.islower() ,lis))
print(newlist)
print(newlist1)
print(newlist2)


############################################################
#upeercase use map

lis=["hello","welcom"]
upeer_list=list(map(lambda x:x.upper(),lis))
print(upeer_list)

#############################################################
#sum of squares use reduce

from functools import reduce
num=[4,4,1,3]
total=reduce(lambda x,y:x+y**2,num,0)
print(total)
